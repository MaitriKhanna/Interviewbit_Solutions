int Solution::trap(const vector<int> &A) {
    int n=A.size();
    vector<int> prefix(n),suffix(n);
    stack<int> s;

    for(int i=0;i<n;i++){
        while(!s.empty() && s.top()<=A[i]) s.pop();
        if(s.empty()){
            prefix[i]=0;
            s.push(A[i]);
        }
        else{
            prefix[i]=s.top()-A[i];
        }
        
    }
    
    while(!s.empty()) s.pop();

    for(int i=n-1;i>=0;i--){
        while(!s.empty() && s.top()<=A[i]) s.pop();
        if(s.empty()){
            suffix[i]=0;
            s.push(A[i]);
        }
        else{
            suffix[i]=s.top()-A[i];
        }
        
    }

    int area=0;
    for(int i=0;i<n;i++){
        area+= min(suffix[i],prefix[i])*1;
    }

    return area;
}
