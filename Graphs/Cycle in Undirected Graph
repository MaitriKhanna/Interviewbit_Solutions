int is_cycle(int src,vector<vector<int>> &adj, vector<bool> &visited,int parent){
    //cout << src << "  ";
    visited[src]=true;
    for(auto i : adj[src]){
        if(visited[i] && i!=parent){return 1; }
        else if(!visited[i] && is_cycle(i,adj,visited,src)) return 1;
    }
    
    return 0;
}

int Solution::solve(int A, vector<vector<int> > &B) {
    if(A<3) return false;
    vector<vector<int>> adj (A+1);
    for(int i=0;i<B.size();i++){
        adj[B[i][0]].push_back(B[i][1]);
        adj[B[i][1]].push_back(B[i][0]);
        
    }

    

    vector<bool> visited (A+1,false);

    for(int i=1;i<=A;i++){
        if(!visited[i] && is_cycle(i,adj,visited,-1)) return 1;
        
    }

    return 0;
}
