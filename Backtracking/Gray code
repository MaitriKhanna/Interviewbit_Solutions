int convert(string s){
    int n=s.size();
    int ans=0;
    int i=0;
    while(n>0){
        ans+= (s[i]-'0')*pow(2,n-1);
        n--;
        i++;
    }

    return ans;
}

vector<string> solve(int A){
    vector<string> v;
    if(A<=0){
        v.push_back("0");
        return v;
    }
    if(A==1){
        v.push_back("0");
        v.push_back("1");
        return v;
    }

    v= solve(A-1);
    vector<string> ans;

    for(int i=0;i<v.size();i++){
        ans.push_back("0"+v[i]);
    }

    for(int i=v.size()-1;i>=0;i--){
        ans.push_back("1"+v[i]);
    }

    return ans;

}

vector<int> Solution::grayCode(int A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    vector<string> v= solve(A);
    vector<int> res;
    for(int i=0;i<v.size();i++){
        
        res.push_back(convert(v[i]));
    }

    return res;


}
