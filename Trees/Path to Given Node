/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

bool path(TreeNode* A,int B,vector<int> &v){
    
    if(A->val==B){
        v.push_back(A->val);
        
        return true;
    }
    //if(A->left==NULL && A->right==NULL) return false;
    if(A->left!=NULL){
        if(path(A->left,B,v)){
            v.push_back(A->val);
            
            return true;
        }
    }
    if(A->right!=NULL){
        if(path(A->right,B,v)){
            v.push_back(A->val);
            
            return true;
        }
    }

    return false;
}
vector<int> Solution::solve(TreeNode* A, int B) {
    vector<int> v;
    path(A,B,v);
    reverse(v.begin(),v.end());
    return v;
}
