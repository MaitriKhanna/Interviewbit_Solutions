/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int height(TreeNode *A){
    if(A==NULL) return 0;
    int x=0,y=0;
    if(A->left) x=height(A->left);
    if(A->right) y=height(A->right);
    return max(x,y)+1;
}
int Solution::isBalanced(TreeNode* A) {
    if(A==NULL || (A->left==NULL && A->right==NULL)) return 1; 
    if(isBalanced(A->left) && isBalanced(A->right) && abs(height(A->left)-height(A->right)) <=1){
        return 1;
    }

    return 0;
}
