int Solution::solve(vector<vector<int> > &A){
    int n=A.size();
    vector<vector<int>> dp(n+1,vector<int> (n+1,0));
    int ans=0;
    for(int i=n-1;i>=0;i--){
        for(int j=i;j>=0;j--){
            dp[i][j]=A[i][j]+max(dp[i+1][j],dp[i+1][j+1]);
            ans=max(ans,dp[i][j]);
        }
    }

    return ans;
}

/*int dp[1001][1001];

int tri(vector<vector<int> > &A,int i,int j){
    if(i>=A.size()) return 0;
    if(dp[i][j]!=-1) return dp[i][j];

    return dp[i][j]= A[i][j]+max(tri(A,i+1,j),tri(A,i+1,j+1));
}

int Solution::solve(vector<vector<int> > &A) {
    memset(dp,-1,sizeof(dp));
    return tri(A,0,0);
}*/
